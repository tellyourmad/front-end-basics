1、分支结构-2
	1、条件判断
		1、各种 if 结构 (if、if...else...、else...if)
		2、短路逻辑 条件 && 操作
		3、条件运算符 :条件?满足 :不满足;
				-- if(){} else{}

	2、做等值判断的 分支 结构
		1、switch-case 结构
			语法：
				switch(变量/表达式){
					case 值1:
						语句块1;
						break; //可选
					case 值2:
						语句块2;
						break; //可选
					... ...
					default: //以上任何一块都没匹配上的时候
						语句块n;
						break; //可选
				}
			
			// 直落形式 : 多个 case 执行相同的语句块。
			switch(变量/表达式){
				case 值1:
				case 值2:
				case 值n:
					语句块;
					break;
				....
			}
2、循环结构-1
	1、问题
		1、控制台中输出 一句 Hello World
		2、控制台中输出 10句 Hello World
		3、控制台中输出 1000句 Hello World
		4、控制台中，将 1000句Hello World 变成 你好 世界!
		5、控制台中，将1000句 你好 世界 的前面加上 
			第 1 句 你好世界
			第 2 句 你好世界
			第 1000 句 你好世界
	2、循环
		1、什么是循环
			一遍又一遍的反复执行相同的操作!

			生活循环：
				1、跑圈 - 1、重复跑 2、圈数限制(12,25)
				2、上学 - 1、重复学习过程 2、4个月 时间限制
				3、地球公转自转 - 1、重复转 2、限制
			特点：
				1、循环操作 ：循环体，要重复做的事情是什么
				2、循环条件 ：重复执行的次数，或继续执行循环的条件
		2、while 循环
			1、语法
				while(循环条件){
					//循环操作
				}

				语义：当 循环条件 为真时，执行循环操作
				流程：
					1、判断 循环条件 (boolean表达式或值)
					2、如果 结果为 真
						2.1 执行循环操作
						2.2 再回到条件判断位置处，继续判断条件
					3、如果条件为 假
						结束循环
		3、循环流程控制-break
			1、作用
				提前 结束 循环

				ex : 要求用户 循环的 从网页输入内容，打印在控制台上，直到 输入 exit 为止
				循环条件：死循环,输入 exit 则退出循环
				循环操作：
					1、输入数据
					2、判断 如果为 exit ， 则 退出 循环
					3、打印输出在控制台上
			2、循环和switch 中的 break 
				while(true){
					var n = prompt();
					switch(n){
						case "1":
							console.log(1);
							break;
						case "2":
							console.log(2);
							break;
					}
				}
	3、每日一练
		猴子吃桃:
			猴子第一天摘下若干个桃子，当即吃了一半，还不爽，又多吃了一个
			第二天 ，将剩下的桃子吃了一半，又多吃一个
			...
			以后每天早上都吃了前一天的剩下的一半零一个
			第十天 ，只剩下一个桃子了
			求：第一天共摘了多少桃子
		