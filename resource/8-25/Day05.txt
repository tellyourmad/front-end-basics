回顾:
	1、分支结构 - switch
		1、场合
			等值判断
		2、语法
			switch(变量/表达式){
				case 值1:
					语句块;
					break;
				......
				default:
					语句块;
					break;
			}

			1、default
				任何case 都没被匹配上要执行的操作
				可有可无
			2、结束 switch...case运行
				1、break
				2、走到switch结束

				switch(n){
					case 1:
						console.log("1");
					case 2:
						console.log("2");
				}
	2、循环结构 - while
		1、循环特点
			1、循环操作 ：重复做的事情是什么!
			2、循环条件 ：控制循环的开始与结束!
		2、while
			2、语法
				while(条件){
					操作
				}

				流程：
					先判断条件
					如果条件为真，则执行操作，然后再判断条件 ... ...
					如果条件为假，则退出循环结构
			3、循环流程控制 - break
				碰到 break 则提前结束循环
练习：猴子吃桃
	一半零一个
	第10天 剩1个

	第10天     剩1    x/2-1=1  x : 4 (第09天的量)
	第09天     剩4    x/2-1=4  x : 10(第08天的量)  
	第08天     剩10   x/2-1=10 x : 22(第07天的量)
	第07天     剩x
	... ...
	第02天     剩left x/2-1=left : x ? 第一天的总量
	第01天     剩x    

	循环条件：9次 从10开始，到2结束
	循环操作：
		left : 1  - 第10天所剩的桃子数量
		total: ? - 第一天所剩的桃子总数
		公式：total/2-1=left
				  total/2 = left+1
					total = (left+1)*2

		total = (left+1)*2;
		left=total;

输入 年 月 日 判断 ，该日是概念的第多少天，用循环来做
提示：月份，是循环判断的!

循环
	1、do...while 循环
		1、问题
			要求用户从网页中输入文本，在控制台上打印输出，直到输入 exit 为止
			
			方式1:
			while(true){
				//输入数据
				//判断是否为 exit，不是exit 打印输出
			}
			
			方式2:
			var input="";
			while((input=prompt("input")) != "exit"){
				//打印
			}
		2、特点
			先 执行 循环体
			再 判断 条件
		3、语法
			do{
				循环操作;
			}while(循环条件);
		4、while 和 do...while 的区别
			1、while 循环 
				先判断，再执行
				最少 循环体 一次都不被执行
			2、do...while 循环
				先执行，再判断
				任何情况下，至少都要执行一次循环体

			两种循环只在第一次执行时有差别，其他情况，while与do...while 是完全一致。
		5、练习
			将 while 版的 猜数字 游戏，改版成 do...while版
			1、条件
				1、用户输入的数字与生成的随机数一样(结束)
				2、用户输入的exit(结束)
			2、操作
				1、循环录入数据
				2、判断(exit?大了?小了？相等)
	2、for 循环
		1、while
			通过 while 打印 1-100 之间所有的数字
			条件：从1 开始 到 100结束
			操作：打印 循环变量

			var i=1;//循环条件 起始数值(表达式1)
			while(i<=100){ //条件判断(表达式2)
				console.log(i); //循环操作(循环操作)
				i++;//更新循环变量(表达式3)
			}
			特点：固定循环次数
		2、for 循环
			1、特点
				将 while 循环中的 几个重要因素放在一起来声明,通过一个大的完整的表达式来声明 循环所需要用到的东西
			2、语法
				for(表达式1;表达式2;表达式3){
					循环操作!
				}
				表达式1：循环变量的声明表达式.
				表达式2：循环条件判断，条件为真，执行循环体，否则退出循环。
				表达式3：更新循环变量

				流程：
					1、计算表达式1的值
					2、计算表达式2的值(boolean),如果条件为真，则执行循环体，否则 退出
					3、执行循环体
					4、计算表达式3的值

					5、计算表达式2的值(boolean),如果条件为真，则执行循环体，否则 退出
					6、同3
					7、同4
			3、场合
				一般用于 固定循环次数时 使用
		3、for语句三个表达式的特殊用法
			1、表达式1允许为空
				允许在循环外，将第一个表达式不足
			2、表达式2允许为空
				死循环
				尽量不要为空，如果为空的话，尽量在循环内部将条件补充完整额。
			3、表达式3允许为空
				死循环
				在 循环 内部 将表达式补充完整。
			4、表达式1 和 表达式3 内容多样化
				表达式1 可以一次声明多个变量
				表达式3 可以一次改变多个变量的数值
				多个表达式之间 用 , 分开
		4、循环流程控制
			1、break
				可以提前终止循环的执行
				能用在循环结构中，也可以用在switch结构中
			2、continue
				1、只能用于循环中
				2、作用
					跳过本次循环中的剩余语句，而继续执行下次循环
	3、三种循环的使用场合
		1、确定循环次数的时候 优先使用 for循环
		2、不确定循环次数的时候，优先使用while和do..while
			1、先判断条件，再决定是否走循环体：while
			2、先走循环体，再根据条件判断是否执行下次循环：do...while
	4、循环嵌套
		在一个循环中 又嵌入了另外一个循环
		for(var i=1;i<=10;i++){
			for(var j=1;j<=10;j++){
				console.log("Hello World");
			}
		}
	
	
1*1=1
1*2=2 2*2=4
1*3=3 2*3=6 3*3*=9
......
1*5=5 2*5=10 3*5=15 4*5=20 5*5=25
1,2,3,4,5 : 循环条件
操作：循环条件 和 打印行数相乘 计算结果


1,1,2,3,5,8,13,21,34,55.....
n1 = 1,n2 = 1

console.log(n1);console.log(n2);// 1,1
n1=n1+n2;
n2=n1+n2;

console.log(n1);console.log(n2);// 2,3
n1=n1+n2;
n2=n1+n2;


f(n) : 第 n 个月 兔子总量
f(n) = f(n-1)+f(n-2)
f(5) = f(4)+f(3)

f(4) : 3
f(3) : 2
f(2) : 1
f(1) : 1



*        第1行1个
**       第2行2个
***      第3行3个
****     第4行4个
*****    第5行5个



    *   第1行1个星  第1行4个空格  5-1=4
   **   第2行2个星  第2行3个空格  5-2=3
  ***   第3行3个星  第3行2个空格  5-3=2
 ****   第4行4个星  第4行1个空格  5-4=1
*****   第5行5个星  第5行0个空格  5-5=0
j : 行数
	k : 空格 k<=(5-j) 
	i : 星星 i<=j



    *       第1行1个星  第1行4个空格 
   ***      第2行3个星  第2行3个空格
  *****     第3行5个星  第3行2个空格
 *******    第4行7个星  第4行1个空格
*********   第5行9个星  第5行0个空格