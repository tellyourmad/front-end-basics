正课:
1. ES5: 
 对象的属性
 Object.create
 数组API
*****函数的bind()
 严格模式

1.对象的属性:
 命名属性:
  数据属性:
  访问器属性:
   核心问题: 实际属性值存在哪儿?
     解决: 使用闭包，封装一个受保护的局部变量。

 内部属性: 
  比如: __proto__   class
    extensible: 标识一个对象是否可扩展新属性。默认值true。
    
 防篡改: 限制对已经创建的对象中的属性进行重新配置。
  为什么: 严格的语言中，要求对象一旦创建，属性不允许擅自增减。
  何时: 今后，只要不允许对已经创建的对象的属性进行添加和删除操作时。
  如何: 3个级别:
   1. 防扩展: 禁止向对象中添加新属性
     判断一个对象是否可扩展: 
     Object.isExtensible(obj)
     设置一个对象不可扩展:
     Object.preventExtensions(obj)
       相当于修改obj的extensible为false
   2. 密封: 在兼具防扩展的基础上，进一步禁止删除对象中的属性
     判断当前对象是否密封:
     Object.isSealed(obj);
     修改当前对象为密封
     Object.seal(obj);
       相当于:修改obj的extensible为false
              将所有属性的configurable特性都改为false。
   3. 冻结: 在兼具密封的基础上，进一步禁止修改所有属性的值
    何时: 只要希望一个对象中的属性值一旦创建，不可改变时，就要冻结对象――
     判断一个对象是否被冻结:
      Object.isFrozen(obj)
     冻结一个对象:
      Object.freeze(obj)
  
2. Object.create()
  设置继承有几种方法:
    1.Object.setPrototypeOf(child,father)
    2.构造函数.prototype
    3.两种类型间的继承:
      抽象父类型
      借用构造函数
      设置子类型原型继承父类型元素
    4.创建一个新对象，继承父对象，并扩展自有属性。
     如何: 
      var child=Object.create(father,{
        新属性:{
          四大特性
        },
        新属性:{
          四大特性
        }
      })

3.数组API:
  1. 判断数组中每个元素是否符合要求:
    arr.every():判断数组中每个元素是否都符合指定规则的要求。	
    arr.some():判断数组中是否包含符合指定规则的元素。
    如何使用: 
     arr.every(function(val,idx,arr){
 	return 判断条件
     })
    
  2. 遍历API:
  3. 过滤和汇总:








   