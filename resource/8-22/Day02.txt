1、数据类型转换
	1、隐式转换
		var num;
		num = 15; //number类型
		num = "你好!";//string类型
		弱类型：是由值来决定数据类型

		var num1 = 15;
		var num2 = 30;
		var result = num1 + num2;
		===============================
		var str1 = "Hello";
		var num1 = 30;
		var result = str1 + num1;//Hello30

		1、typeof 函数/运算符
			语法 
				var r1 = typeof 变量;
				var r2 = typeof(变量);
		2、NaN
			Not a Number ：不是一个数字
			isNaN() : 是不是一个数字
				返回结果：true 或 false
				true ：不是一个数字
				false ：是一个数字
		3、结论
			1、数字 + 字符串 ：将数字转换为字符串
			2、数字 + boolean ：将 boolean 转换为 number类型
			3、数字 + undefined ：结果为 NaN，NaN的类型为 number
			4、字符串 + boolean ：将boolean 转换为 字符串
			5、boolean + boolean ：都转换成number在做相加运算


				

		不同类型的数据在计算过程中会进行"自动转换"
	2、转换函数
		显示转换/强制转换
		1、toString()
			将任意类型的数据转换为字符串类型
			var newVar=变量.toString()
		2、parseInt()
			作用：将一个数据转换成"整数"
			语法：var result=parseInt(变量);
			注意：
				1、碰到第一个非数字字符则停止转换，已经转换的则保留
				2、如果第一个字符就是非数字字符，结果为 NaN
		3、parseFloat()
			作用：将指定的数据转换为 小数
			语法：var result = parseFloat(变量);
		4、Number()
			作用：将一个数据转换为 number 类型
			注意：
				只要包含非法字符(除数字和小数点)，则返回NaN
	3、练习
		console.log("");//控制台打印
		document.write("");//页面输出
		window.alert();/alert();//页面弹框

		输入：
		window.prompt();/prompt();//页面输入框

		prompt("提示文本");
2、运算符和表达式
	1、分类
		1、单目运算符
			只需要一个操作数即可
		2、双目运算符
			需要两个操作数的的运算符
			a + b;
			5 % 2;
			a >= 25；
		3、三目运算符
			需要三个操作数的运算符
			?:
	2、详解
		1、算术运算符
			+,-,*,/,%
			10 % 3 : 1
			10.5 % 3 :1.5
			...
			
			++,-- 运算符，单目运算符

			++:自增运算,增量为1
				var i=5;
				i++;i=i+1;
				++i;i=i+1;

				++在后 ：先使用变量的值，再对变量进行自增。
				var i=5;
				console.log(i++);//先打印i的值，打印完成后，i再增加

				++在前 ：先对变量进行自增操作，然后再使用变量的值
				var i=5;
				//1、先将i的值自增(+1)
				//2、打印i的值 6
				console.log(++i);
			--:自减运算,减量为1
				变量--; //先使用 变量值，然后再自减
				--变量; //先自减，然后再使用变量值

			四舍五入：toFixed(保留位数);
			语法：数字.toFixed(n);

			由算术运算符所组成的表达式，称之为 算术表达式
			var a;
			var b;
			var c = a + b; //算术表达式，赋值表达式
		2、关系运算符
			1、作用
				判断数据之间的大小或相等关系
			2、关系运算符
				>,<,>=,<=,==,!=
				由 关系运算符所组成的表达式 称之为 关系表达式，关系表达式的值为boolean类型

				==，!= : 只判断数值是否相等，与类型无关

				全等：===
					类型相同
					数值相同
				不全等：!==
		3、isNaN函数
			1、作用
				判断其参数是否为一个 "非数字" 值

				返回值：
					true ：值不是一个数字
					false：值是一个数字
		4、逻辑运算符
			1、作用
				判断多条件 以及 条件取反时使用
			2、语法
				1、逻辑 非
					对现有条件 取反
					语法：!
				2、逻辑 与
					两个条件，两条件同时为真时，&& 表达式才为真。
					语法：&&
					ex：
						考试通过条件：
							1、机试 >= 60分
							2、笔试 >= 60分
				3、逻辑 或
					两个条件，只要有一个为真时，表达式即为真
					语法：||
			3、运算结果
				true && true : true
				true && false : false
				false && true : false
				false && false :false

				true || true : true
				true || false :true
				false || true : true
				false || false :false

				练习：输入一个数字，判断该数字是否在 0 ~ 10 之间

				练习：判断字符 
					中文 : \u4e00  ~ \u9FA5
					英文 ：'a'~'z' 或者 'A'~'Z'
					数字 ：'0'~'9'

					闰年：
						1、年份能被4整除但是不能被100整除是闰年
						2、年份能够 400 整除 也是闰年
			4、"短路逻辑"
				对于 && : false && ? : false
					如果第一个表达式已经为假的话，那么第二个表达式就不需要再判断，并且将第一个表达式的值 作为 整个逻辑表达式的值。
				对于 || : true || ? :true
					如果第一个表达式已经为真的话，那么第二个表达式就不需要再判断

				当做假看待的 数值：
				"" : 空字符串
				0 :
				0.0
				undefined :
				NaN
				null:空
		5、位运算符
			1、二进制
				由 0,1组成，逢二进一
				二进制        十进制
				0             0
				1             1
				10            2
				11            3
				100           4

				内存中：
				4在内存中的形式：
				0000 0000 0000 0000
				0000 0000 0000 0100

				1在内存中的形式
				0000 0000 0000 0000
				0000 0000 0000 0001
			2、按位 与
				语法：&
				作用：将两边得到操作数都转换成二进制，每位上的数字，只有都为1的时候，该位的结果才为 1，否则 该位按0处理
				ex : 1 & 3
				1 : 01
				3 : 11
				r : 01

				5 & 3
				5 : 101
				3 : 011
				r : 001
				场合：判断一个数字的奇偶性。n&1,结果为1，n为奇数，否则n为偶数

				5 & 1
				5 ：101
				1 ：001
				r ：001

				6 & 1
				6 : 110
				1 : 001
				r : 000
			3、按位
				或 : |
				非 : ~
			4、按位异或 : ^
				语法：^
				作用：两个数的二进制中，该位数字只有一个1的时候，该位结果才为1，其他情况都是0
				ex:
					5 ^ 3
					5 : 101
					3 : 011
					r : 110
				使用场合：互换两个数字时，不借助第三方变量时使用 异或
				var num1=1,num2=2;

				var temp = num1;
				num1 = num2;
				num2 = temp;
				*******************
				num1=num1^num2;
				num2=num2^num1;
				num1=num1^num2;
				****************************
				num1=5,num2=3;
				
				num1 : 101
				num2 : 011

				num1=num1 ^ num2
					num1 : 101
					num2 : 011
				num1=		 110   = 6

				num2=num2 ^ num1;
					num2 : 011
					num1 : 110
				num2=		 101   = 5

				num1=num1 ^ num2;
					num1 : 110
					num2 : 101
				num1=		 011   = 3
			5、左移
				语法：<<
				作用：将 对应的二进制数，向左移动几位，后面以 0 补齐位置
				2<<1

				2:10

				0000 0000 0000 0000
				0000 0000 0000 1000
				2<<1 : 100  = 4
				2<<2 : 1000 = 8
				2<<3 : 10000=16
				2<<4 : 100000=32

			6、右移
				语法：>>
				作用：将 对应的二进制数，向右移动几位，前面以 0 补齐位置
				2>>2 :
				0000 0000 0000 0000
				0000 0000 0000 1000
		6、条件运算符(三目运算符)
			1、语法
				? :
				表达式1?表达式2:表达式3;
				表达式1，值应该为 boolean 类型

				如果表达式1的值为true，那么表达式2的值则作为整个表达式的值

				如果表达式1的值为false，那么表达式3的值则作为整个表达式的值

				ex ：输入考试成绩，如果成绩大于等于60 ，则输出及格，否则输出 不及格